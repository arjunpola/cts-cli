// Generated by CoffeeScript 1.3.1
(function() {
  var BANNER, cats, catsjs, fs, jquery, jsdom, parseOptions, path, printLine, printWarn, pullDataFromString, pullDataFromUrl, request, scraped, url, usage;

  fs = require('fs');

  path = require('path');

  jsdom = require('jsdom');

  request = require('request');

  jquery = fs.readFileSync("./lib/jquery.js").toString();

  catsjs = fs.readFileSync("./lib/cats.js").toString();

  printLine = function(line) {
    return process.stdout.write(line + '\n');
  };

  printWarn = function(line) {
    return process.stderr.write(line + '\n');
  };

  BANNER = 'Usage: dscrape cats-file url ';

  cats = [];

  url = "";

  exports.run = function() {
    if (parseOptions()) {
      return pullDataFromUrl(url, cats, scraped);
    }
  };

  scraped = function(data) {
    return printLine("DID RETURN " + JSON.stringify(data));
  };

  parseOptions = function() {
    var opts;
    opts = process.argv.slice(2);
    if (opts.length < 2) {
      printWarn("Not enough arguments");
      usage();
      return false;
    }
    cats.push(opts[0]);
    url = opts[1];
    return true;
  };

  pullDataFromUrl = function(theUrl, catsSheets, scraped) {
    return request({
      uri: theUrl
    }, function(error, response, body) {
      if (error && response.statusCode !== 200) {
        printWarn("Error contacting " + url);
        return {};
      }
      return pullDataFromString(body, catsSheets, scraped);
    });
  };

  pullDataFromString = function(str, catsSheets, scraped) {
    var data;
    data = {};
    return jsdom.env({
      html: str,
      src: [jquery, catsjs],
      done: function(err, window) {
        var engine;
        engine = new window.CATS.Engine();
        data = engine.recoverData(window.$('html'));
        return scraped(data);
      }
    });
  };

  usage = function() {
    return printLine(BANNER);
  };

}).call(this);
